// ------------------------------------------------------------------------------------------------------------------------------------------------
// SCRIPT: mr_tempPin_rotate.mel
// VERSION: 0006
//
// CREATORS: Maria Robertson
// ------------------------------------------------------------------- 
//
// DESCRIPTION: Pins selected object/s to a single temp locator, to be only rotated in worldspace. When script is run again, constrained objects are keyed on current frame, and temp pin deleted.
// 
// ------------------------------------------------------------------- 
//
// RUN COMMAND:
// mr_tempPin_rotate() ;
//
// REQUIREMENTS:
// Must have mr_find_constraint_targets_and_drivers.py in order to use mr_find_targets_of_selected()
// ------------------------------------------------------------------- 
// CHANGELOG:
// 2023-06-28 - 0006:
//  - Updated script to use Python function to find constraint targets.
// 0005: Removing maintainOffset from orientConstraint, to stop it offseting target objects wrongly
// 0004: Keeping locator point constrained to objects, so that it follows them.
// 0003: Added catch command, to stop script from failing if any translation or rotation attributes are locked.
//                            
// ------------------------------------------------------------------------------------------------------------------------------------------------

global proc mr_tempPin_rotate() {
    
    // -------------------------------------------------------------------
    // 01. INITIALIZE VARIABLES
    // -------------------------------------------------------------------

    string $tempPinRotLocName = "TEMP_ROT_worldspace_locator" ;
    
    if (`objExists $tempPinRotLocName`) {
        select $tempPinRotLocName ;
        
        // use function to find constrained objects
        python("import importlib");
        python("import mr_find_constraint_targets_and_drivers");
        python("importlib.reload(mr_find_constraint_targets_and_drivers)");
        python("mr_find_constraint_targets_and_drivers.mr_find_targets_of_selected()");
                     
        SetKeyTranslate ;
        SetKeyRotate ;
        
        delete $tempPinRotLocName ;      
    }
    
    else {     

        string $sel[] = `ls -sl` ;  
        
        // create the temp locator
        spaceLocator -p 0 0 0 -n $tempPinRotLocName ;
        setAttr ($tempPinRotLocName + "Shape.localScaleX") 10 ;
        setAttr ($tempPinRotLocName + "Shape.localScaleY") 10 ;
        setAttr ($tempPinRotLocName + "Shape.localScaleZ") 10 ;

         
        // rotate locator at the average orientation of selected objects   
        for ($item in $sel) { 
            catch (`orientConstraint $item $tempPinRotLocName`) ;
        }
        
        // delete the orient constrains 
        delete -cn $tempPinRotLocName ;
        
        // place locator at the average position of the selected objects   
        // then orient constrain the selected objects to the locator
        for ($item in $sel) { 
            catch (`pointConstraint $item $tempPinRotLocName`) ;
            catch (`orientConstraint $tempPinRotLocName $item`) ;      
        }
        
        // lock translate of locator
        setAttr  -lock true ($tempPinRotLocName + ".translateX");
        setAttr  -lock true ($tempPinRotLocName + ".translateY");
        setAttr  -lock true ($tempPinRotLocName + ".translateZ");
  
        select $tempPinRotLocName ; 
    }       

}