
// ------------------------------------------------------------------------------------------------------------------------------------------------
// SCRIPT: mr_tempPin_createIndividualPins
// VERSION: 0003
//
// CREATORS: Maria Robertson
// ------------------------------------------------------------------- 
//
// DESCRIPTION: 
// - Pins selected object/s to a temp locator, to be moved in worldspace. 
// - All temp locators are placed in a group, located at their average position and orientation.
// - When script is run again, constrained objects are keyed on the current frame, and the pin then deleted.
// 
// ------------------------------------------------------------------- 
//
// RUN COMMAND:
// mr_tempPin_createIndividualPins() ;
//
// REQUIREMENTS:
// Must have mr_find_constraint_targets_and_drivers.py in order to use its function.
// ------------------------------------------------------------------- 
// CHANGELOG:
// 2023-12-06 - 0003:
//  - Updated script to use Python function to find constraint targets.
//
// 0002: Added catch command, to stop script from failing if any translation or rotation attributes are locked.
//                           
// ------------------------------------------------------------------------------------------------------------------------------------------------

global proc mr_tempPin_createIndividualPins() {

    // -------------------------------------------------------------------
    // 01. INITIALIZE VARIABLES
    // -------------------------------------------------------------------
    
    string $groupName = "TEMP_worldspace_locator_grp" ;
    
    string $tempPointConstraint[0] ;
    string $tempOrientConstraint[0] ;
    
    // -------------------------------------------------------------------
    // 00. CHECK IF TEMP GROUP ALREADY EXISTS
    // -------------------------------------------------------------------
        
    // if TEMP_worldspace_locator_grp already exists
    if (`objExists $groupName`) {
              
        // set key on all children of TEMP_worldspace_locator_grp
        select (`listRelatives -c $groupName`) ;

        // use function to find constrained objects
        python("import importlib");
        python("import mr_find_constraint_targets_and_drivers");
        python("importlib.reload(mr_find_constraint_targets_and_drivers)");
        python("mr_find_constraint_targets_and_drivers.mr_find_targets_of_selected()");
        
        SetKeyTranslate ;
        SetKeyRotate ;
        // delete
        delete $groupName ;
    }
    
    // -------------------------------------------------------------------
    // 00. CREATE TEMP PIN FOR EACH SELECTED OBJECT
    // -------------------------------------------------------------------
        
    else {     
        
        string $sel[] = `ls -sl` ; 

        // if nothing is selected
        if (size($sel) == 0) {
            // reminds you to select something //
            // make sure -title is unique, otherwise dialog won't trigger
            confirmDialog -title "Error" -message "Select object/s to pin. \n" ;
        } 
      
        
        else {    

            // create a group
            group -em -name $groupName ;
            
            // position group at the average position and orientation of every item selected
            for ($item in $sel) {
                 $tempPointConstraint = `pointConstraint $item $groupName` ;  
                 $tempOrientConstraint = `orientConstraint $item $groupName` ;  
            }            

            // remove constraints
            delete $tempPointConstraint $tempOrientConstraint ;
            
            
            // for every item selected
            for ($item in $sel) { 

                // create a locator
                $tempPinLocator = `spaceLocator -p 0 0 0 -n ("TEMP_worldspace_" + $item + "_loc")` ; 
                
                // position and orient it at its target                                                     
                catch (`pointConstraint $item $tempPinLocator`) ;
                catch (`orientConstraint $item $tempPinLocator`) ;
                delete -cn $tempPinLocator ; 
                
                // place the locator in the group
                parent $tempPinLocator $groupName ;    
                                
                // reverse constraints
                catch (`pointConstraint -mo -w 1 $tempPinLocator $item`) ;
                catch (`orientConstraint -mo -w 1 $tempPinLocator $item`) ;   
  
            }                       
        }
                      
        // select group before exiting
        select $groupName ;               
    }       
}