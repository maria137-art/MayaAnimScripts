// -------------------------------------------------------------------
// SCRIPT: changeWorldspacePivot 
//
// CREATORS / CREDIT: Maria Robertson / Daniel Fotheringham
//
//
// DESCRIPTION: 
// Based on Daniel Fotheringham's demo: https://youtu.be/MjYXR0Ts1sE?t=3087 at 51:27 - 54:00
//
// Bake objects in the parent space of a worldspace pivot, to make
// it easier to clean curves when travelling in different directions.
//
// e.g. if a character travels diagonally in a straight line, the movement is represented in trans x and z axis.
// But if baked inside a pivot pointing in the same direction, it will be represented by just trans z.
//
// INSTRUCTIONS:
// - The first time the script runs, it will create a locator called TEMP_PIVOT_loc.
// 
//
// WISH LIST
// ============
// - Save control keys + tangents, and apply it to the bake
// - Delete redundant keys
// - Have pivot point in the direction of movement based on current and next frame.
// 
// RESEARCH THAT HELPE
// Why current time doesn't work - https://forums.cgsociety.org/t/using-getattr-t-to-do-time-delay/805166/2
// -------------------------------------------------------------------

proc ChangeWorldspacePivot(){
    
    // declare array from selected
    string $sel[] = `ls -sl`;
    
    // -------------------------------------------------------------------
    // 01. QUERY IF TEMP_PIVOT_loc ALREADY EXISTS
    // -------------------------------------------------------------------   
    
    if(`objExists "TEMP_PIVOT_loc"`){
        
        // -------------------------------------------------------------------
        // 02. GIVE ERROR IF NOTHING SELECTED   
        // ------------------------------------------------------------------- 
                 
        // give error if nothing is selected
		if (size($sel) == 0){
    		// reminds you to select something //
    		// make sure -title is unique, otherwise dialog won't trigger
    		confirmDialog -title "Error A" -message "Select object/s to pivot.";
    	}  
    	
        // -------------------------------------------------------------------
        // 03. DECLARE VARIABLES
        // -------------------------------------------------------------------   
          
        // declare time range
    	float $startTime = `playbackOptions -q -min`;
    	float $endTime = `playbackOptions -q -max`;
    
        // declare strings  	
    	string $tempPivot = "TEMP_PIVOT_loc";	   	
    	string $pivotLocators[]; 	
    	
   	    // -------------------------------------------------------------------
        // 04. MAIN SCRIPT
        // ------------------------------------------------------------------- 
            	
    	// for each control selected
    	for ($item in $sel) {	    

            // -------------------------------------------------------------------
            // 04A. GIVE ERROR IT TEMP_PIVOT_loc IS SELECTED
            // ------------------------------------------------------------------- 
             		   
    	    // if selected item is TEMP_PIVOT_loc
        	if ($item == $tempPivot){
    			confirmDialog -title "Error B" -message ("Select object/s to pivot.");
    			// end For Loop
    			break;
    		}
    		
    		// -------------------------------------------------------------------
            // 04B. SET-UP PIVOT
            // -------------------------------------------------------------------   
              		           	         
        	else {
        		// make array of selection
        		string $array[] = `ls -sl`;
                
                // for every selected item
        		for ($item in $array) {
        		    // create a locator
        			spaceLocator -p 0 0 0 -n ($item + "_pivot_loc");
        			// add locator to $pivotLocators array
        			$pivotLocators[size($pivotLocators)] = ($item + "_pivot_loc"); 
                    
                    // match position and orientation of new locator to TEMP_PIVOT_loc      
        			pointConstraint "TEMP_PIVOT_loc" ($item + "_pivot_loc");
        			orientConstraint "TEMP_PIVOT_loc" ($item + "_pivot_loc");
        			// delete any connections / delete constraints
        			delete -cn;
                    
                    // make locator bigger
        			setAttr ($item + "_pivot_loc.localScaleX") 18;
        			setAttr ($item + "_pivot_loc.localScaleY") 18;
        			setAttr ($item + "_pivot_loc.localScaleZ") 18;
           
                   // constrain controls to the offset locators
        			pointConstraint $item ($item + "_pivot_loc");
        			orientConstraint -mo $item ($item + "_pivot_loc");
        			
                    // place offset locator inside TEMP_PIVOT_loc
        	        parent ($item + "_pivot_loc") "TEMP_PIVOT_loc";
        	    }
            }
            
    		// -------------------------------------------------------------------
            // 05. BAKE PIN LOCATORS
            // -------------------------------------------------------------------   
                                       
            // bake pivot locators
        	select $pivotLocators;
        	  
        	refresh -suspend 1;
        	bakeResults -simulation true -t ($startTime+":"+$endTime) -sampleBy 1 -disableImplicitControl true -preserveOutsideKeys true -sparseAnimCurveBake false -removeBakedAttributeFromLayer false -removeBakedAnimFromLayer false -bakeOnOverrideLayer false -minimizeRotation true -controlPoints false;
        	delete -sc;
        	filterCurve;
        	delete -cn;
        	refresh -suspend 0;
        	
        	// give $i value of 0. If size of $pivotLocators is greater than 0, increase $i value by 1
        	// and run script
            for ($i=0; $i < `size $pivotLocators`; $i++) {                
            	pointConstraint $pivotLocators[$i] $sel[$i];
            	orientConstraint -mo $pivotLocators[$i] $sel[$i];
            }
    	    
        }
        
        select $tempPivot;
    
    }


    // -------------------------------------------------------------------
    // 02. IF TEMP_PIVOT_loc DOES NOT EXISTS
    // -------------------------------------------------------------------  
            
    // if TEMP_PIVOT_loc doesn't exist 
    else {
        
        // -------------------------------------------------------------------
        // 02 - A. IF SOMETHING IS SELECTED
        // -------------------------------------------------------------------    
              
        // if something is selected
        if (size (`ls -sl`) > 0){         
        
            // create string from the last item selected
            $lastSelected = `ls -sl -tail 1`; 
            
            spaceLocator -p 0 0 0 -n "TEMP_PIVOT_loc" ;
    
            // set locator scale
            setAttr "TEMP_PIVOT_loc.localScaleZ" 50;
            setAttr "TEMP_PIVOT_loc.localScaleX" 50;
            setAttr "TEMP_PIVOT_loc.localScaleY" 50;         
                    
            // point and orient constrain locator to specified axis on current frame              
            /*
            // with axis skipss
            pointConstraint -skip y $lastSelected TEMP_PIVOT_loc;  
            orientConstraint -skip x -skip z $lastSelected TEMP_PIVOT_loc;              
            */
            
            pointConstraint $lastSelected TEMP_PIVOT_loc;             
            orientConstraint $lastSelected TEMP_PIVOT_loc;              
                                 
            // declare time
            $currentFrame = `currentTime -q` ; 
            $nextFrame = `currentTime -q` + 1 ; 

            // -------------------------------------------------------------------
            // 03. AIM PIVOT LOCATOR IN DIRECTION OF MOVEMENT, BASED ON CURRENT FRAME
            // -------------------------------------------------------------------    
                      
            // Research for using vector data: 
            // https://forums.cgsociety.org/t/find-position-between-2-points/1286034/4
            // Research on error "An array expression element must be a scalar value"
            // https://forums.cgsociety.org/t/n-array-expression-element-must-be-a-scalar-value/1203879
            
            // get co-ordinates of worldspace locator attached to object
            float $a1 = `getAttr -time $currentFrame TEMP_PIVOT_loc.translateX`; 
            float $a2 = `getAttr -time $currentFrame TEMP_PIVOT_loc.translateY`; 
            float $a3 = `getAttr -time $currentFrame TEMP_PIVOT_loc.translateZ`;  
            
            float $b1 = `getAttr -time $nextFrame TEMP_PIVOT_loc.translateX`; 
            float $b2 = `getAttr -time $nextFrame TEMP_PIVOT_loc.translateY`; 
            float $b3 = `getAttr -time $nextFrame TEMP_PIVOT_loc.translateZ`; 
            
            // delete constraints
            DeleteConstraints TEMP_PIVOT_loc;
 
            //convert to vector
        	vector $v1 = {$a1,$a2,$a3};
        	vector $v2 = {$b1,$b2,$b3};
                
        	// calculate direction vector
            vector $d = $v2-$v1;	 
            // normalize
            vector $nd = $d/mag($d);             
            // convert back to float
	        float $newP[] = {$nd.x,$nd.y,$nd.z};
	        
            // aim based on World Up Vector
            currentTime $nextFrame ;
            aimConstraint -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "vector" -worldUpVector $newP[0] $newP[1] $newP[2] $lastSelected TEMP_PIVOT_loc ;       
            DeleteConstraints TEMP_PIVOT_loc ;     
            currentTime $currentFrame ; 
            
            select $sel;
            
            print "Run mr_changeWorldspacePivot again when ready, to baked selected objects under the pivot.\n";
            
        }  
        // -------------------------------------------------------------------
        // 02 - B. IF NOTHIN IS SELECTED
        // -------------------------------------------------------------------   
        
        // if nothing is selected
        else {
            
            // create TEMP_PIVOT_loc locator
        	warning("No TEMP_PIVOT_loc exists. Creating one now.");
            spaceLocator -p 0 0 0 -n "TEMP_PIVOT_loc" ;
                  
            // set locator scale
            setAttr "TEMP_PIVOT_loc.localScaleZ" 50;
            setAttr "TEMP_PIVOT_loc.localScaleX" 50;
            setAttr "TEMP_PIVOT_loc.localScaleY" 50;
                           
        }
       
    }    
    
}

ChangeWorldspacePivot;