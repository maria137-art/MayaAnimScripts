
// ------------------------------------------------------------------------------------------------------------------------------------------------
// SCRIPT: mr_tempPin_createTransRotPin
// VERSION: 0002
//
// CREATORS: Maria Robertson
// ------------------------------------------------------------------- 
//
// DESCRIPTION: 
// - Pins selected object/s to a single temp locator, to be moved in worldspace. 
// - When script is run again, constrained objects are keyed on current frame, and temp pin deleted.
// 
// ------------------------------------------------------------------- 
//
// RUN COMMAND:
// mr_tempPin_createTransRotPin() ;
//
// REQUIREMENTS:
// Must have mr_findConstraintTargets.mel in order to use the procedure FindConstraintTargets
// ------------------------------------------------------------------- 
// CHANGELOG:
// 0002: Added catch command, to stop script from failing if any translation or rotation attributes are locked.
//                       
// ------------------------------------------------------------------------------------------------------------------------------------------------

global proc mr_tempPin_createTransRotPin() {

    string $tempPinLocName = "TEMP_worldspace_locator" ;

    if (`objExists $tempPinLocName`) {
        select $tempPinLocName ;
        
        // use procedure
        FindConstraintTargets() ;
                     
        SetKeyTranslate ;
        SetKeyRotate ;
        
        delete $tempPinLocName ;      
    }
    
    else {     

        string $sel[] = `ls -sl` ;  
        
        // create the temp locator
        spaceLocator -p 0 0 0 -n $tempPinLocName ;
        setAttr ($tempPinLocName + "Shape.localScaleY") 10 ;
        setAttr ($tempPinLocName + "Shape.localScaleZ") 10 ;
        setAttr ($tempPinLocName + "Shape.localScaleZ") 10 ;

         
        // place the locator at the average position and orientation between
        // the selected objects   
        for ($item in $sel) { 
            catch (`pointConstraint $item $tempPinLocName`) ;
            catch (`orientConstraint $item $tempPinLocName`) ;
        }

        delete -cn $tempPinLocName ;

        for ($item in $sel) {       
            catch (`pointConstraint -mo -w 1 $tempPinLocName $item`) ;
            catch (`orientConstraint -mo -w 1 $tempPinLocName $item`) ;   
        }  
                
        select $tempPinLocName ;         
    }       
 }